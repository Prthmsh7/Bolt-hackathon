@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800;900&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Poppins', system-ui, sans-serif;
  background: #F4F5F7;
  color: #141414;
  min-height: 100vh;
  overflow-x: hidden;
  line-height: 1.6;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Enhanced scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(229, 231, 235, 0.5);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb {
  background: #141414;
  border-radius: 4px;
  transition: all 0.2s ease;
}

::-webkit-scrollbar-thumb:hover {
  background: #333333;
}

/* Neo-brutalism card styles */
.neo-card {
  background: #FFFFFF;
  border: 1px solid #141414;
  border-radius: 12px;
  box-shadow: 5px 5px 0 #141414;
  transition: all 0.2s ease;
}

.neo-card:hover {
  transform: translate(-2px, -2px);
  box-shadow: 7px 7px 0 #141414;
}

.neo-card.accent {
  background: #FFF59D;
}

.neo-card.secondary {
  background: #FF9800;
}

/* Neo-brutalism button styles */
.neo-btn {
  background: #FFFFFF;
  border: 1px solid #141414;
  border-radius: 8px;
  box-shadow: 5px 5px 0 #141414;
  padding: 10px 20px;
  font-weight: 600;
  color: #141414;
  transition: all 0.2s ease;
  cursor: pointer;
}

.neo-btn:hover {
  transform: translate(-2px, -2px);
  box-shadow: 7px 7px 0 #141414;
}

.neo-btn:active {
  transform: translate(0, 0);
  box-shadow: 3px 3px 0 #141414;
}

.neo-btn.primary {
  background: #141414;
  color: #FFFFFF;
}

.neo-btn.secondary {
  background: #FF9800;
  color: #FFFFFF;
}

.neo-btn.accent {
  background: #FFF59D;
  color: #141414;
}

.neo-btn.success {
  background: #4CAF50;
  color: #FFFFFF;
}

.neo-btn.error {
  background: #f44336;
  color: #FFFFFF;
}

/* Torus Knot CSS Implementation */
.torus-knot-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  overflow: hidden;
  background-color: #000;
}

/* Main torus knot element */
.torus-knot {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100vmin;
  height: 100vmin;
  transform-style: preserve-3d;
  transform: translate(-50%, -50%) rotateX(60deg) rotateZ(0deg);
  animation: rotate3d 120s linear infinite;
}

/* Create multiple knot loops */
.knot-loop {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  border: none;
  transform-style: preserve-3d;
}

/* Generate 36 knot segments to create the torus knot effect */
.knot-loop::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 80%;
  height: 80%;
  transform: translate(-50%, -50%);
  border-radius: 40% 60% 60% 40% / 40% 50% 50% 60%;
  box-shadow: 0 0 60px 20px rgba(255, 152, 0, 0.3);
  animation: morphShape 20s linear infinite;
}

/* Create the knot segments with different animations */
.knot-segment {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 90%;
  height: 90%;
  transform-style: preserve-3d;
  transform-origin: center;
  border-radius: 50%;
}

/* Generate 36 segments for the torus knot */
@for $i from 0 through 35 {
  .knot-segment:nth-child(#{$i + 1}) {
    transform: translate(-50%, -50%) rotateZ(#{$i * 10}deg) translateX(40%) rotateY(#{$i * 10}deg);
    
    &::before {
      content: '';
      position: absolute;
      width: 20px;
      height: 20px;
      border-radius: 50%;
      background: radial-gradient(circle, rgba(255, 152, 0, 0.8) 0%, rgba(255, 152, 0, 0) 70%);
      box-shadow: 0 0 20px 5px rgba(255, 152, 0, 0.4);
      animation: pulse 3s ease-in-out infinite;
      animation-delay: #{$i * 0.1}s;
    }
  }
}

/* Text in the center of the knot */
.knot-text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 5rem;
  font-weight: 900;
  color: white;
  text-shadow: 0 0 20px rgba(255, 152, 0, 0.7);
  letter-spacing: 0.5rem;
  animation: glow 3s ease-in-out infinite alternate;
  z-index: 10;
}

/* Animations */
@keyframes rotate3d {
  0% {
    transform: translate(-50%, -50%) rotateX(60deg) rotateZ(0deg);
  }
  100% {
    transform: translate(-50%, -50%) rotateX(60deg) rotateZ(360deg);
  }
}

@keyframes morphShape {
  0%, 100% {
    border-radius: 40% 60% 60% 40% / 40% 50% 50% 60%;
  }
  25% {
    border-radius: 60% 40% 40% 60% / 60% 40% 60% 40%;
  }
  50% {
    border-radius: 40% 60% 40% 60% / 50% 60% 40% 50%;
  }
  75% {
    border-radius: 60% 40% 60% 40% / 40% 60% 50% 50%;
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 0.3;
    transform: scale(0.8);
  }
  50% {
    opacity: 1;
    transform: scale(1.2);
  }
}

@keyframes glow {
  0%, 100% {
    text-shadow: 0 0 20px rgba(255, 152, 0, 0.7);
  }
  50% {
    text-shadow: 0 0 30px rgba(255, 152, 0, 1), 0 0 40px rgba(255, 152, 0, 0.5);
  }
}

/* CSS Torus Knot Implementation */
.torus-knot-wrapper {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  perspective: 1000px;
  overflow: hidden;
  background-color: #000;
}

.torus-knot-3d {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 60vmin;
  height: 60vmin;
  transform-style: preserve-3d;
  transform: translate(-50%, -50%) rotateX(60deg);
}

/* Create the torus knot structure */
.torus-ring {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  transform-style: preserve-3d;
  animation: rotate3d 60s linear infinite;
}

/* Generate the knot points */
.knot-point {
  position: absolute;
  width: 15px;
  height: 15px;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(255, 152, 0, 0.8) 0%, rgba(255, 152, 0, 0) 70%);
  box-shadow: 0 0 20px 5px rgba(255, 152, 0, 0.4);
  transform-style: preserve-3d;
}

/* Generate 120 points for the torus knot */
@for $i from 0 through 119 {
  $t: $i * 0.05;
  $p: 2; /* p parameter for torus knot */
  $q: 3; /* q parameter for torus knot */
  
  $r: 0.8;
  $theta: $t * 2 * 3.14159 * $p;
  $phi: $t * 2 * 3.14159 * $q;
  
  $x: $r * (2 + cos($phi)) * cos($theta) / 3;
  $y: $r * (2 + cos($phi)) * sin($theta) / 3;
  $z: $r * sin($phi) / 3;
  
  .knot-point:nth-child(#{$i + 1}) {
    transform: translate3d(
      calc(50% + #{$x * 100%}),
      calc(50% + #{$y * 100%}),
      #{$z * 100px}
    );
    opacity: #{0.3 + $z * 0.7};
    animation: pulse 3s ease-in-out infinite;
    animation-delay: #{$i * 0.02}s;
  }
}

/* Create glowing trails between points */
.knot-trail {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: 
    radial-gradient(ellipse at center, rgba(255, 152, 0, 0.2) 0%, transparent 70%),
    conic-gradient(
      from 0deg at 50% 50%,
      rgba(255, 152, 0, 0) 0deg,
      rgba(255, 152, 0, 0.3) 60deg,
      rgba(255, 152, 0, 0) 120deg,
      rgba(255, 152, 0, 0.3) 180deg,
      rgba(255, 152, 0, 0) 240deg,
      rgba(255, 152, 0, 0.3) 300deg,
      rgba(255, 152, 0, 0) 360deg
    );
  filter: blur(10px);
  transform-style: preserve-3d;
  animation: rotate3d 30s linear infinite reverse;
}

/* Add ambient glow */
.ambient-glow {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 150%;
  height: 150%;
  transform: translate(-50%, -50%);
  background: radial-gradient(circle, rgba(255, 152, 0, 0.2) 0%, transparent 70%);
  filter: blur(50px);
  animation: pulse 10s ease-in-out infinite alternate;
}

/* Enhanced button animations */
.btn-animate {
  transition: all 0.2s ease;
  position: relative;
  overflow: hidden;
}

.btn-animate:hover {
  transform: translate(-2px, -2px);
}

.btn-animate:active {
  transform: translate(0, 0);
  transition: all 0.1s ease;
}

/* Enhanced card hover effects */
.card-hover {
  transition: all 0.2s ease;
  position: relative;
}

.card-hover:hover {
  transform: translate(-2px, -2px);
}

/* Enhanced fade in animation */
.fade-in {
  animation: fadeIn 0.8s ease;
}

@keyframes fadeIn {
  from { 
    opacity: 0; 
    transform: translateY(30px);
  }
  to { 
    opacity: 1; 
    transform: translateY(0);
  }
}

/* Focus styles for accessibility */
*:focus {
  outline: 2px solid #141414;
  outline-offset: 2px;
}

button:focus,
input:focus,
select:focus,
textarea:focus {
  outline: 2px solid #141414;
  outline-offset: 2px;
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .card-hover {
    border: 2px solid #000;
  }
  
  .btn-animate {
    border: 2px solid #000;
  }
}

/* Hover effects for buttons */
.hover-orange:hover {
  background-color: #FF9800 !important;
  color: white !important;
  border-color: #141414 !important;
}

/* CSS Torus Knot Implementation - Alternative Version */
.torus-knot-effect {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #000;
  overflow: hidden;
  z-index: 0;
}

.torus-container {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 80vmin;
  height: 80vmin;
  transform: translate(-50%, -50%);
}

.torus-ring {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
}

/* Create the main torus structure */
.torus-ring::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  background: 
    radial-gradient(
      ellipse at center,
      rgba(255, 152, 0, 0.2) 0%,
      transparent 70%
    );
  filter: blur(20px);
  animation: pulse 8s ease-in-out infinite alternate;
}

/* Create the knot pattern */
.knot-pattern {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  animation: rotate 60s linear infinite;
}

.knot-pattern::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    repeating-conic-gradient(
      from 0deg at 50% 50%,
      rgba(255, 152, 0, 0) 0deg 20deg,
      rgba(255, 152, 0, 0.3) 20deg 40deg,
      rgba(255, 152, 0, 0) 40deg 60deg,
      rgba(255, 152, 0, 0.3) 60deg 80deg,
      rgba(255, 152, 0, 0) 80deg 100deg,
      rgba(255, 152, 0, 0.3) 100deg 120deg,
      rgba(255, 152, 0, 0) 120deg 140deg,
      rgba(255, 152, 0, 0.3) 140deg 160deg,
      rgba(255, 152, 0, 0) 160deg 180deg,
      rgba(255, 152, 0, 0.3) 180deg 200deg,
      rgba(255, 152, 0, 0) 200deg 220deg,
      rgba(255, 152, 0, 0.3) 220deg 240deg,
      rgba(255, 152, 0, 0) 240deg 260deg,
      rgba(255, 152, 0, 0.3) 260deg 280deg,
      rgba(255, 152, 0, 0) 280deg 300deg,
      rgba(255, 152, 0, 0.3) 300deg 320deg,
      rgba(255, 152, 0, 0) 320deg 340deg,
      rgba(255, 152, 0, 0.3) 340deg 360deg
    );
  filter: blur(5px);
}

.knot-pattern::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    repeating-conic-gradient(
      from 180deg at 50% 50%,
      rgba(255, 152, 0, 0) 0deg 20deg,
      rgba(255, 152, 0, 0.3) 20deg 40deg,
      rgba(255, 152, 0, 0) 40deg 60deg,
      rgba(255, 152, 0, 0.3) 60deg 80deg,
      rgba(255, 152, 0, 0) 80deg 100deg,
      rgba(255, 152, 0, 0.3) 100deg 120deg,
      rgba(255, 152, 0, 0) 120deg 140deg,
      rgba(255, 152, 0, 0.3) 140deg 160deg,
      rgba(255, 152, 0, 0) 160deg 180deg,
      rgba(255, 152, 0, 0.3) 180deg 200deg,
      rgba(255, 152, 0, 0) 200deg 220deg,
      rgba(255, 152, 0, 0.3) 220deg 240deg,
      rgba(255, 152, 0, 0) 240deg 260deg,
      rgba(255, 152, 0, 0.3) 260deg 280deg,
      rgba(255, 152, 0, 0) 280deg 300deg,
      rgba(255, 152, 0, 0.3) 300deg 320deg,
      rgba(255, 152, 0, 0) 320deg 340deg,
      rgba(255, 152, 0, 0.3) 340deg 360deg
    );
  filter: blur(5px);
  animation: rotate 40s linear infinite reverse;
}

/* Create the knot strands */
.knot-strands {
  position: absolute;
  top: 10%;
  left: 10%;
  width: 80%;
  height: 80%;
  border-radius: 50%;
}

.knot-strand {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  border: 2px solid rgba(255, 152, 0, 0.3);
  box-shadow: 0 0 20px rgba(255, 152, 0, 0.2);
  animation: rotate 30s linear infinite;
}

.knot-strand:nth-child(1) {
  transform: rotate(0deg) scale(0.9);
  animation-duration: 60s;
}

.knot-strand:nth-child(2) {
  transform: rotate(45deg) scale(0.85);
  animation-duration: 50s;
  animation-direction: reverse;
}

.knot-strand:nth-child(3) {
  transform: rotate(90deg) scale(0.8);
  animation-duration: 70s;
}

.knot-strand:nth-child(4) {
  transform: rotate(135deg) scale(0.75);
  animation-duration: 40s;
  animation-direction: reverse;
}

/* Create the central text */
.torus-text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 5rem;
  font-weight: 900;
  color: white;
  text-shadow: 0 0 20px rgba(255, 152, 0, 0.7);
  letter-spacing: 0.5rem;
  animation: glow 3s ease-in-out infinite alternate;
  z-index: 10;
}

@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 0.5;
    transform: scale(0.95);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
}

@keyframes glow {
  0%, 100% {
    text-shadow: 0 0 20px rgba(255, 152, 0, 0.7);
  }
  50% {
    text-shadow: 0 0 30px rgba(255, 152, 0, 1), 0 0 40px rgba(255, 152, 0, 0.5);
  }
}